{
    "firestore": {
        "rules": "service cloud.firestore {\n  match /databases/{database}/documents {\n    // Allow any authenticated user to read published jobs\n    match /jobs/{jobId} {\n      allow read: if resource.data.status == 'published' || isAuthenticated();\n      // Only admins can create or edit jobs\n      allow write: if isAdmin();\n    }\n    \n    // Authenticated users can read their own data and admins can read all\n    match /users/{userId} {\n      allow read: if request.auth.uid == userId || isAdmin();\n      // Users can update their own profiles, admins can update any\n      allow write: if request.auth.uid == userId || isAdmin();\n    }\n    \n    // Candidates can be read by admin users or the owner\n    match /candidates/{candidateId} {\n      allow read: if isAuthenticated() && (resource.data.email == request.auth.token.email || isAdmin());\n      // Job applicants can create their own profile, admins can edit any\n      allow create: if isAuthenticated();\n      allow update, delete: if isAdmin() || (isAuthenticated() && resource.data.email == request.auth.token.email);\n    }\n    \n    // Helper functions\n    function isAuthenticated() {\n      return request.auth != null;\n    }\n    \n    function isAdmin() {\n      return isAuthenticated() && \n        exists(/databases/$(database)/documents/users/$(request.auth.uid)) && \n        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';\n    }\n  }\n}",
        "storage": {
            "rules": "service firebase.storage {\n  match /b/{bucket}/o {\n    // Allow users to read all resumes but only upload their own\n    match /resumes/{userId}/{fileName} {\n      allow read: if request.auth != null;\n      allow write: if request.auth.uid == userId || isAdmin();\n    }\n    \n    // Helper functions\n    function isAuthenticated() {\n      return request.auth != null;\n    }\n    \n    function isAdmin() {\n      return request.auth != null && \n        firestore.exists(/databases/(default)/documents/users/$(request.auth.uid)) && \n        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';\n    }\n  }\n}"
        }
    }
}